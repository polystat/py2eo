+package org.eolang
+junit
memory > xStopIteration
memory > xmyArray
[] > nested_for_break_continue
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xnested_for_break_continue
        seq > @
          xnested_for_break_continue.write
            []
              memory > xnum
              memory > xit0
              memory > xflag
              memory > xnum2
              memory > xnums
              memory > xit1
              memory > xres
              memory > xnums2
              seq > @
                seq
                  xflag.write (pybool FALSE)
                  xnums.write (((xmyArray)).apply ((((unsupported)).apply ((pyint 1)) ((pyint 2)) ((pyint 3)) ((pyint 4)))))
                  xnums2.write (((xmyArray)).apply ((((unsupported)).apply ((pyint 1)) ((pyint 4)) ((pyint 9)) ((pyint 16)))))
                  xres.write (((xmyArray)).apply ((((unsupported)).apply)))
                  seq
                    xit0.write ((((xnums).x__iter__)).apply)
                    (((unsupported)).apply ((xStopIteration)))
                      while.
                        (pybool TRUE)
                        [unused]
                          seq > @
                            seq
                              xnum.write ((((xit0).x__next__)).apply)
                              seq
                                seq
                                  xit1.write ((((xnums2).x__iter__)).apply)
                                  (((unsupported)).apply ((xStopIteration)))
                                    while.
                                      (pybool TRUE)
                                      [unused]
                                        seq > @
                                          seq
                                            xnum2.write ((((xit1).x__next__)).apply)
                                            seq
                                              (((xnum).eq (pyint 3)).and ((xnum2).eq (pyint 9))).if
                                                (((unsupported)).apply)
                                              bogusForceDataize.write ((((xres).xappend)).apply (((xnum2).sub (xnum))))
                                              (((xnum).eq (pyint 7)).and ((xnum2).eq (pyint 49))).if
                                                seq
                                                  xflag.write (pybool TRUE)
                                                  (((unsupported)).apply)
                                (xflag).if
                                  (((unsupported)).apply)
                  (((unsupported)).apply (((xres).eq (((xmyArray)).apply ((((unsupported)).apply ((pyint 2)) ((pyint 5)) ((pyint 10)) ((pyint 17)) ((pyint 3)) ((pyint 6)) ((pyint 11)) ((pyint 18)) ((pyint 4)) ((pyint 7)) ((pyint 19)) ((pyint 5)) ((pyint 8)) ((pyint 13)) ((pyint 20))))))))