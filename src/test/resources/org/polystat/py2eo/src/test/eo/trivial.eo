+package org.eolang
+alias cage org.eolang.gray.cage
+alias stdout org.eolang.io.stdout
+alias sprintf org.eolang.txt.sprintf
+junit

[] > xtrivial
  memory > forceData
  cage > xtestFib1
  [closure] > xtmpFuntestFib1
    memory > forceData
    cage > xbb_interm6
    cage > xbb_else0
    cage > xf1
    cage > xbb_interm2
    cage > xbb_interm3
    cage > xe3
    cage > xbb_interm4
    cage > xbb_interm11
    cage > xbb_finish0
    cage > xbb_interm5
    cage > xf2
    cage > xbb_interm0
    cage > xe1
    cage > xbb_yes0
    cage > xbb_interm9
    cage > xbb_body0
    cage > xbb_interm7
    cage > xe0
    cage > xf0
    cage > xbb_no0
    cage > xe2
    cage > xbb_start0
    cage > xbb_interm1
    cage > xbb_interm10
    cage > xii
    cage > xbb_interm8
    [closure] > xtmpFunbb_start0
      memory > forceData
      seq > @
        forceData.write 0
        xf0.write forceData
        ((((xbb_interm0).xcallme)) ((xbb_interm0)))
    [closure] > xtmpFunbb_interm0
      memory > forceData
      seq > @
        forceData.write 1
        xf1.write forceData
        ((((xbb_interm1).xcallme)) ((xbb_interm1)))
    [closure] > xtmpFunbb_interm1
      memory > forceData
      seq > @
        forceData.write 0
        xii.write forceData
        ((((xbb_interm2).xcallme)) ((xbb_interm2)))
    [closure] > xtmpFunbb_interm2
      memory > forceData
      seq > @
        (TRUE.if ((((xbb_body0).xcallme)) ((xbb_body0))) ((((xbb_else0).xcallme)) ((xbb_else0))))
    [closure] > xtmpFunbb_body0
      memory > forceData
      seq > @
        forceData.write ((xii).less 10)
        xe2.write forceData
        ((((xbb_interm4).xcallme)) ((xbb_interm4)))
    [closure] > xtmpFunbb_interm4
      memory > forceData
      seq > @
        (((xe2).not).if ((((xbb_yes0).xcallme)) ((xbb_yes0))) ((((xbb_no0).xcallme)) ((xbb_no0))))
    [closure] > xtmpFunbb_yes0
      memory > forceData
      seq > @
        ((((xbb_interm3).xcallme)) ((xbb_interm3)))
    [closure] > xtmpFunbb_no0
      memory > forceData
      seq > @
        ((((xbb_interm5).xcallme)) ((xbb_interm5)))
    [closure] > xtmpFunbb_interm5
      memory > forceData
      seq > @
        forceData.write ((xf0).add (xf1))
        xe0.write forceData
        ((((xbb_interm7).xcallme)) ((xbb_interm7)))
    [closure] > xtmpFunbb_interm7
      memory > forceData
      seq > @
        forceData.write (xe0)
        xf2.write forceData
        ((((xbb_interm6).xcallme)) ((xbb_interm6)))
    [closure] > xtmpFunbb_interm6
      memory > forceData
      seq > @
        forceData.write ((xii).add 1)
        xe1.write forceData
        ((((xbb_interm9).xcallme)) ((xbb_interm9)))
    [closure] > xtmpFunbb_interm9
      memory > forceData
      seq > @
        forceData.write (xe1)
        xii.write forceData
        ((((xbb_interm8).xcallme)) ((xbb_interm8)))
    [closure] > xtmpFunbb_interm8
      memory > forceData
      seq > @
        forceData.write (xf1)
        xf0.write forceData
        ((((xbb_interm10).xcallme)) ((xbb_interm10)))
    [closure] > xtmpFunbb_interm10
      memory > forceData
      seq > @
        forceData.write (xf2)
        xf1.write forceData
        ((((xbb_interm2).xcallme)) ((xbb_interm2)))
    [closure] > xtmpFunbb_else0
      memory > forceData
      seq > @
        ((((xbb_interm3).xcallme)) ((xbb_interm3)))
    [closure] > xtmpFunbb_interm3
      memory > forceData
      seq > @
        forceData.write (55.eq (xf0))
        xe3.write forceData
        ((((xbb_interm11).xcallme)) ((xbb_interm11)))
    [closure] > xtmpFunbb_interm11
      memory > forceData
      seq > @
        (xe3)
    [closure] > xtmpFunbb_finish0
      memory > forceData
      seq > @
        "None: is there a None literal in the EO language?"
    seq > @
      forceData.write "None: is there a None literal in the EO language?"
      xe1.write forceData
      forceData.write "None: is there a None literal in the EO language?"
      xf1.write forceData
      forceData.write "None: is there a None literal in the EO language?"
      xe3.write forceData
      forceData.write "None: is there a None literal in the EO language?"
      xe2.write forceData
      forceData.write "None: is there a None literal in the EO language?"
      xii.write forceData
      forceData.write "None: is there a None literal in the EO language?"
      xf2.write forceData
      forceData.write "None: is there a None literal in the EO language?"
      xe0.write forceData
      forceData.write "None: is there a None literal in the EO language?"
      xf0.write forceData
      forceData.write "None: is there a None literal in the EO language?"
      xbb_start0.write forceData
      forceData.write "None: is there a None literal in the EO language?"
      xbb_interm0.write forceData
      forceData.write "None: is there a None literal in the EO language?"
      xbb_interm1.write forceData
      forceData.write "None: is there a None literal in the EO language?"
      xbb_interm2.write forceData
      forceData.write "None: is there a None literal in the EO language?"
      xbb_body0.write forceData
      forceData.write "None: is there a None literal in the EO language?"
      xbb_interm4.write forceData
      forceData.write "None: is there a None literal in the EO language?"
      xbb_yes0.write forceData
      forceData.write "None: is there a None literal in the EO language?"
      xbb_no0.write forceData
      forceData.write "None: is there a None literal in the EO language?"
      xbb_interm5.write forceData
      forceData.write "None: is there a None literal in the EO language?"
      xbb_interm7.write forceData
      forceData.write "None: is there a None literal in the EO language?"
      xbb_interm6.write forceData
      forceData.write "None: is there a None literal in the EO language?"
      xbb_interm9.write forceData
      forceData.write "None: is there a None literal in the EO language?"
      xbb_interm8.write forceData
      forceData.write "None: is there a None literal in the EO language?"
      xbb_interm10.write forceData
      forceData.write "None: is there a None literal in the EO language?"
      xbb_else0.write forceData
      forceData.write "None: is there a None literal in the EO language?"
      xbb_interm3.write forceData
      forceData.write "None: is there a None literal in the EO language?"
      xbb_interm11.write forceData
      forceData.write "None: is there a None literal in the EO language?"
      xbb_finish0.write forceData
      write.
        xbb_start0
        []
          (xtmpFunbb_start0) > xcallme
      write.
        xbb_interm0
        []
          (xtmpFunbb_interm0) > xcallme
      write.
        xbb_interm1
        []
          (xtmpFunbb_interm1) > xcallme
      write.
        xbb_interm2
        []
          (xtmpFunbb_interm2) > xcallme
      write.
        xbb_body0
        []
          (xtmpFunbb_body0) > xcallme
      write.
        xbb_interm4
        []
          (xtmpFunbb_interm4) > xcallme
      write.
        xbb_yes0
        []
          (xtmpFunbb_yes0) > xcallme
      write.
        xbb_no0
        []
          (xtmpFunbb_no0) > xcallme
      write.
        xbb_interm5
        []
          (xtmpFunbb_interm5) > xcallme
      write.
        xbb_interm7
        []
          (xtmpFunbb_interm7) > xcallme
      write.
        xbb_interm6
        []
          (xtmpFunbb_interm6) > xcallme
      write.
        xbb_interm9
        []
          (xtmpFunbb_interm9) > xcallme
      write.
        xbb_interm8
        []
          (xtmpFunbb_interm8) > xcallme
      write.
        xbb_interm10
        []
          (xtmpFunbb_interm10) > xcallme
      write.
        xbb_else0
        []
          (xtmpFunbb_else0) > xcallme
      write.
        xbb_interm3
        []
          (xtmpFunbb_interm3) > xcallme
      write.
        xbb_interm11
        []
          (xtmpFunbb_interm11) > xcallme
      write.
        xbb_finish0
        []
          (xtmpFunbb_finish0) > xcallme
      ((((xbb_start0).xcallme)) ((xbb_start0)))
  seq > @
    write.
      xtestFib1
      []
        (xtmpFuntestFib1) > xcallme
    ((((xtestFib1).xcallme)))
