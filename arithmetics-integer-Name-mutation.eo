+package org.eolang
+alias goto org.eolang.gray.goto
+alias stdout org.eolang.io.stdout
+alias cage org.eolang.gray.cage
+junit

[unused] > arithmetics-integer
  [] > apply
    [stackUp] > @
      [x] > mkCopy
        x' > copy
        copy.< > @
      [] > newUID
        memory > cur
        seq > apply
          cur.write (cur.is-empty.if 5 (cur.add 1))
          cur
      [] > raiseEmpty
        [] > xclass
          4 > xid
      [res] > return
        res > result
        [] > xclass
          3 > xid
      [] > break
        [] > xclass
          2 > xid
      [] > continue
        [] > xclass
          1 > xid
      [] > raiseNothing
        [] > xclass
          0 > xid
      cage > xcurrent-exception
      [] > xmyArray
        [initValue] > apply
          [stackUp] > @
            cage > pResult
            [] > result
              cage > value
              [] > xlength
                [self] > apply
                  [stackUp] > @
                    seq > @
                      stackUp.forward (return (self.value.length))
                      123
              [] > xget
                [self i] > apply
                  [stackUp] > @
                    seq > @
                      stackUp.forward (return (self.value.get i))
                      123
              [] > xappend
                [self x] > apply
                  [stackUp] > @
                    seq > @
                      mkCopy (self.value) > tmp
                      self.value.write (tmp.copy.append x)
                      stackUp.forward (return 0)
            seq > @
              result.value.write initValue
              pResult.write result
              stackUp.forward (return pResult)
      cage > tmp
      cage > toReturn
      cage > assertMe
      cage > xarithmetics_integer
      seq > @
        stdout "arithmetics-integer\n"
        write.
          xarithmetics_integer
          []
            [] > apply
              [stackUp] > @
                cage > tmp
                cage > toReturn
                cage > lhs32
                cage > e12
                cage > e23
                cage > lhs45
                cage > lhs23
                cage > lhs15
                cage > e6
                cage > lhs40
                cage > e18
                cage > lhs0
                cage > e29
                cage > lhs25
                cage > lhs37
                cage > lhs42
                cage > e1
                cage > xorr
                cage > lhs31
                cage > lhs48
                cage > xpow
                cage > xrem
                cage > lhs29
                cage > e5
                cage > e28
                cage > lhs44
                cage > e7
                cage > lhs17
                cage > e17
                cage > xxorr
                cage > lhs33
                cage > xuminus2
                cage > lhs21
                cage > e0
                cage > e20
                cage > lhs43
                cage > lhs28
                cage > xshl
                cage > lhs5
                cage > e4
                cage > e24
                cage > lhs36
                cage > lhs47
                cage > e13
                cage > lhs13
                cage > xandd
                cage > xsub
                cage > e8
                cage > e16
                cage > lhs39
                cage > e27
                cage > e3
                cage > lhs27
                cage > lhs34
                cage > xmul
                cage > lhs9
                cage > lhs35
                cage > e21
                cage > xshr
                cage > e10
                cage > xadd
                cage > e25
                cage > lhs11
                cage > e14
                cage > lhs46
                cage > lhs3
                cage > e9
                cage > lhs30
                cage > lhs19
                cage > e15
                cage > xdiv
                cage > e2
                cage > lhs41
                cage > e11
                cage > e26
                cage > lhs7
                cage > e22
                cage > lhs38
                cage > xuplus
                cage > e19
                seq > @
                  stdout "xarithmetics_integer\n"
                  [] > tmp1
                    memory > dddata
                    dddata.write ((10.pow 2)) > @
                  (e0).write (tmp1.dddata)
                  ((e0).<)
                  (lhs0).write (100)
                  [] > tmp2
                    memory > dddata
                    dddata.write (((e0).eq (lhs0))) > @
                  (e1).write (tmp2.dddata)
                  ((e1).<)
                  mkCopy (e1) > tmp3
                  (xpow).write (tmp3.copy)
                  [] > tmp4
                    memory > dddata
                    dddata.write ((1.neg)) > @
                  (e2).write (tmp4.dddata)
                  ((e2).<)
                  [] > tmp5
                    memory > dddata
                    dddata.write ((0.sub 1)) > @
                  (e3).write (tmp5.dddata)
                  ((e3).<)
                  [] > tmp6
                    memory > dddata
                    dddata.write (((e2).eq (e3))) > @
                  (e4).write (tmp6.dddata)
                  ((e4).<)
                  mkCopy (e4) > tmp7
                  (xuminus2).write (tmp7.copy)
                  (lhs3).write (1)
                  [] > tmp8
                    memory > dddata
                    dddata.write ((1)) > @
                  (e5).write (tmp8.dddata)
                  ((e5).<)
                  [] > tmp9
                    memory > dddata
                    dddata.write (((lhs3).eq (e5))) > @
                  (e6).write (tmp9.dddata)
                  ((e6).<)
                  mkCopy (e6) > tmp10
                  (xuplus).write (tmp10.copy)
                  [] > tmp11
                    memory > dddata
                    dddata.write ((10.mul 10)) > @
                  (e7).write (tmp11.dddata)
                  ((e7).<)
                  (lhs5).write (100)
                  [] > tmp12
                    memory > dddata
                    dddata.write (((e7).eq (lhs5))) > @
                  (e8).write (tmp12.dddata)
                  ((e8).<)
                  mkCopy (e8) > tmp13
                  (xmul).write (tmp13.copy)
                  [] > tmp14
                    memory > dddata
                    dddata.write ((100.div 11)) > @
                  (e9).write (tmp14.dddata)
                  ((e9).<)
                  (lhs7).write (9)
                  [] > tmp15
                    memory > dddata
                    dddata.write (((e9).eq (lhs7))) > @
                  (e10).write (tmp15.dddata)
                  ((e10).<)
                  mkCopy (e10) > tmp16
                  (xdiv).write (tmp16.copy)
                  [] > tmp17
                    memory > dddata
                    dddata.write ((100.mod 11)) > @
                  (e11).write (tmp17.dddata)
                  ((e11).<)
                  (lhs9).write (1)
                  [] > tmp18
                    memory > dddata
                    dddata.write (((e11).eq (lhs9))) > @
                  (e12).write (tmp18.dddata)
                  ((e12).<)
                  mkCopy (e12) > tmp19
                  (xrem).write (tmp19.copy)
                  [] > tmp20
                    memory > dddata
                    dddata.write ((1.add 10)) > @
                  (e13).write (tmp20.dddata)
                  ((e13).<)
                  (lhs11).write (11)
                  [] > tmp21
                    memory > dddata
                    dddata.write (((e13).eq (lhs11))) > @
                  (e14).write (tmp21.dddata)
                  ((e14).<)
                  mkCopy (e14) > tmp22
                  (xadd).write (tmp22.copy)
                  [] > tmp23
                    memory > dddata
                    dddata.write ((10.sub 1)) > @
                  (e15).write (tmp23.dddata)
                  ((e15).<)
                  (lhs13).write (9)
                  [] > tmp24
                    memory > dddata
                    dddata.write (((e15).eq (lhs13))) > @
                  (e16).write (tmp24.dddata)
                  ((e16).<)
                  mkCopy (e16) > tmp25
                  (xsub).write (tmp25.copy)
                  [] > tmp26
                    memory > dddata
                    dddata.write ((1.left 1)) > @
                  (e17).write (tmp26.dddata)
                  ((e17).<)
                  (lhs15).write (2)
                  [] > tmp27
                    memory > dddata
                    dddata.write (((e17).eq (lhs15))) > @
                  (e18).write (tmp27.dddata)
                  ((e18).<)
                  mkCopy (e18) > tmp28
                  (xshl).write (tmp28.copy)
                  [] > tmp29
                    memory > dddata
                    dddata.write ((3.right 1)) > @
                  (e19).write (tmp29.dddata)
                  ((e19).<)
                  (lhs17).write (1)
                  [] > tmp30
                    memory > dddata
                    dddata.write (((e19).eq (lhs17))) > @
                  (e20).write (tmp30.dddata)
                  ((e20).<)
                  mkCopy (e20) > tmp31
                  (xshr).write (tmp31.copy)
                  [] > tmp32
                    memory > dddata
                    dddata.write ((13.and 6)) > @
                  (e21).write (tmp32.dddata)
                  ((e21).<)
                  (lhs19).write (4)
                  [] > tmp33
                    memory > dddata
                    dddata.write (((e21).eq (lhs19))) > @
                  (e22).write (tmp33.dddata)
                  ((e22).<)
                  mkCopy (e22) > tmp34
                  (xandd).write (tmp34.copy)
                  [] > tmp35
                    memory > dddata
                    dddata.write ((10.or 12)) > @
                  (e23).write (tmp35.dddata)
                  ((e23).<)
                  (lhs21).write (14)
                  [] > tmp36
                    memory > dddata
                    dddata.write (((e23).eq (lhs21))) > @
                  (e24).write (tmp36.dddata)
                  ((e24).<)
                  mkCopy (e24) > tmp37
                  (xorr).write (tmp37.copy)
                  [] > tmp38
                    memory > dddata
                    dddata.write ((2.xor 3)) > @
                  (e25).write (tmp38.dddata)
                  ((e25).<)
                  (lhs23).write (1)
                  [] > tmp39
                    memory > dddata
                    dddata.write (((e25).eq (lhs23))) > @
                  (e26).write (tmp39.dddata)
                  ((e26).<)
                  mkCopy (e26) > tmp40
                  (xxorr).write (tmp40.copy)
                  [] > tmp41
                    memory > dddata
                    dddata.write (((xpow).not)) > @
                  (e27).write (tmp41.dddata)
                  ((e27).<)
                  (e27).if
                    seq
                      (lhs25).write (TRUE)
                      TRUE
                    seq
                      [] > tmp42
                        memory > dddata
                        dddata.write (((xuminus).not)) > @
                      (e28).write (tmp42.dddata)
                      ((e28).<)
                      mkCopy (e28) > tmp43
                      (lhs25).write (tmp43.copy)
                      TRUE
                  [] > tmp44
                    memory > dddata
                    dddata.write (((lhs25).not)) > @
                  (e29).write (tmp44.dddata)
                  ((e29).<)
                  (e29).if
                    seq
                      mkCopy (xuplus) > tmp45
                      (lhs27).write (tmp45.copy)
                      TRUE
                    seq
                      (lhs28).write (FALSE)
                      mkCopy (lhs28) > tmp46
                      (lhs27).write (tmp46.copy)
                      TRUE
                  (lhs27).if
                    seq
                      mkCopy (xmul) > tmp47
                      (lhs29).write (tmp47.copy)
                      TRUE
                    seq
                      (lhs30).write (FALSE)
                      mkCopy (lhs30) > tmp48
                      (lhs29).write (tmp48.copy)
                      TRUE
                  (lhs29).if
                    seq
                      mkCopy (xdiv) > tmp49
                      (lhs31).write (tmp49.copy)
                      TRUE
                    seq
                      (lhs32).write (FALSE)
                      mkCopy (lhs32) > tmp50
                      (lhs31).write (tmp50.copy)
                      TRUE
                  (lhs31).if
                    seq
                      mkCopy (xrem) > tmp51
                      (lhs33).write (tmp51.copy)
                      TRUE
                    seq
                      (lhs34).write (FALSE)
                      mkCopy (lhs34) > tmp52
                      (lhs33).write (tmp52.copy)
                      TRUE
                  (lhs33).if
                    seq
                      mkCopy (xadd) > tmp53
                      (lhs35).write (tmp53.copy)
                      TRUE
                    seq
                      (lhs36).write (FALSE)
                      mkCopy (lhs36) > tmp54
                      (lhs35).write (tmp54.copy)
                      TRUE
                  (lhs35).if
                    seq
                      mkCopy (xsub) > tmp55
                      (lhs37).write (tmp55.copy)
                      TRUE
                    seq
                      (lhs38).write (FALSE)
                      mkCopy (lhs38) > tmp56
                      (lhs37).write (tmp56.copy)
                      TRUE
                  (lhs37).if
                    seq
                      mkCopy (xshl) > tmp57
                      (lhs39).write (tmp57.copy)
                      TRUE
                    seq
                      (lhs40).write (FALSE)
                      mkCopy (lhs40) > tmp58
                      (lhs39).write (tmp58.copy)
                      TRUE
                  (lhs39).if
                    seq
                      mkCopy (xshr) > tmp59
                      (lhs41).write (tmp59.copy)
                      TRUE
                    seq
                      (lhs42).write (FALSE)
                      mkCopy (lhs42) > tmp60
                      (lhs41).write (tmp60.copy)
                      TRUE
                  (lhs41).if
                    seq
                      mkCopy (xandd) > tmp61
                      (lhs43).write (tmp61.copy)
                      TRUE
                    seq
                      (lhs44).write (FALSE)
                      mkCopy (lhs44) > tmp62
                      (lhs43).write (tmp62.copy)
                      TRUE
                  (lhs43).if
                    seq
                      mkCopy (xorr) > tmp63
                      (lhs45).write (tmp63.copy)
                      TRUE
                    seq
                      (lhs46).write (FALSE)
                      mkCopy (lhs46) > tmp64
                      (lhs45).write (tmp64.copy)
                      TRUE
                  (lhs45).if
                    seq
                      mkCopy (xxorr) > tmp65
                      (lhs47).write (tmp65.copy)
                      TRUE
                    seq
                      (lhs48).write (FALSE)
                      mkCopy (lhs48) > tmp66
                      (lhs47).write (tmp66.copy)
                      TRUE
                  toReturn.write ((lhs47))
                  stackUp.forward (return toReturn)
                  123
        tmp.write (goto ((((xarithmetics_integer)).apply).@))
        (tmp.xclass.xid.neq (return.xclass.xid)).if (stackUp.forward tmp) 0
        (assertMe).write (tmp.result)
        toReturn.write ((assertMe))
        stackUp.forward (return toReturn)
  (goto (apply.@)).result > @