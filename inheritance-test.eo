+package org.eolang
+alias pyint preface.pyint
+alias pyfloat preface.pyfloat
+alias pystring preface.pystring
+alias pybool preface.pybool
+junit
pyint 0 > dummy-int-usage
pystring 0 > dummy-string-usage
pyfloat 0 > dummy-float-usage
pybool TRUE > dummy-bool-usage
memory 0 > xFriend3
memory 0 > xFriend
memory 0 > xhasattr
memory 0 > xParent
memory 0 > xCitizens
memory 0 > xFriend2
memory 0 > xChild
[] > yinheritancetest
  [args...] > unsupported
  [args...] > xunsupported
  memory 0 > bogusForceDataize
  memory 0 > xbogusForceDataize
  memory 0 > xhack
  seq > @
    xhack.write
      []
        memory 0 > xinheritanceTesting
        seq > @
          xinheritanceTesting.write
            []
              memory 0 > xtestCheck
              memory 0 > xpName
              memory 0 > xgetPeople
              memory 0 > xchName
              memory 0 > xcount
              memory 0 > xcheckPeople
              memory 0 > xname
              memory 0 > xgetParent
              seq > @
                seq
                  (((unsupported)).apply)
                    xpName.write (pystring "Bob")
                  (((unsupported)).apply)
                    seq
                      xchName.write (pystring "Steve")
                      xgetParent.write
                        []
                          seq > @
                            (((unsupported)).apply (((((xParent)).apply).xpName)))
                  (((unsupported)).apply ((xParent)) ((xChild)))
                    seq
                      xname.write (pystring "Dan")
                      xgetPeople.write
                        [xself]
                          seq > @
                            seq
                              bogusForceDataize.write ((((xself).x__setattr__)).apply ((pystring "age")) ((pyint 100)))
                              (((unsupported)).apply (((((((((xself).xpName).x__len__)).apply).greater (pyint 0)).and ((((((xself).xchName).x__len__)).apply).greater (pyint 0))).and (((xhasattr)).apply ((xself)) ((pystring "age"))))))
                  (((unsupported)).apply ((xParent)) ((xChild)) ((xFriend)))
                    seq
                      xname.write (pystring "Dan")
                      xgetPeople.write
                        [xself]
                          seq > @
                            seq
                              bogusForceDataize.write ((((xself).x__setattr__)).apply ((pystring "age")) ((pyint 100)))
                              (((unsupported)).apply (((xself).xgetPeople)))
                  (((unsupported)).apply ((xFriend)) ((xChild)) ((xFriend2)))
                    seq
                      xname.write (pystring "Dan")
                      xgetPeople.write
                        [xself]
                          seq > @
                            seq
                              bogusForceDataize.write ((((xself).x__setattr__)).apply ((pystring "age")) ((pyint 100)))
                              (((unsupported)).apply (((xself).xgetPeople)))
                  (((unsupported)).apply ((xFriend)) ((xFriend3)) ((xFriend2)))
                    seq
                      xname.write (pystring "Dan")
                      xgetPeople.write
                        [xself]
                          seq > @
                            seq
                              bogusForceDataize.write ((((xself).x__setattr__)).apply ((pystring "age")) ((pyint 100)))
                              (((unsupported)).apply (((xself).xgetPeople)))
                  (((unsupported)).apply ((xFriend)))
                    seq
                      xcount.write (pyint 100000)
                      xcheckPeople.write
                        [xself]
                          seq > @
                            (((unsupported)).apply (((((xself).xcount).greater (pyint 0)).and ((((xself).xgetPeople)).apply))))
                  xtestCheck.write
                    []
                      memory 0 > xc
                      seq > @
                        seq
                          xc.write (((xCitizens)).apply)
                          bogusForceDataize.write ((((xc).x__setattr__)).apply ((pystring "mid_age")) ((pyint 45)))
                          bogusForceDataize.write ((((xc).x__delattr__)).apply ((pystring "mid_age")))
                          (((unsupported)).apply ((((((xc).xgetPeople)).apply).and (((xhasattr)).apply ((xc)) ((pystring "mid_age"))))))
                  (((unsupported)).apply ((((xtestCheck)).apply)))